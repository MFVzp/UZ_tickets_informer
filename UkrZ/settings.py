"""
Django settings for UkrZ project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import sys
import datetime
import typing as t
import json

import dj_database_url

from .celery import app


def get_envvar(envvar: str, envtype: t.Any, required: bool = False, default: t.Any = None) -> t.Any:
    try:
        if envtype == bool:
            if os.getenv(envvar):
                value = True if os.getenv(envvar).lower() == 'true' else False
            else:
                value = default
        elif envtype == dict:
            value = json.loads(os.getenv(envvar)) if os.getenv(envvar) else default
        else:
            value = envtype(os.getenv(envvar)) if os.getenv(envvar) else default
    except ValueError:
        if required:
            raise ValueError('Config variable {} can\'t be assigned with type {}'.format(envvar, envtype))
    else:
        if value is None and required:
            raise ValueError('Config variable {} is required'.format(envvar))
        return value

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Application definition

ALLOWED_HOSTS = [
    '*'
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'search_app',
    'auth_app',

    'compressor',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'UkrZ.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'templates/search_app'),
            os.path.join(BASE_DIR, 'templates/auth_app'),
            os.path.join(BASE_DIR, 'templates/mails'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

WSGI_APPLICATION = 'UkrZ.wsgi.application'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

AUTH_USER_MODEL = 'auth_app.MyUser'

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True



# UkrZ settings

USE_TZ = True


# Celery configurations

UZ_HOST = 'https://booking.uz.gov.ua/ru/'


app.conf.beat_schedule = {
    'clear-expired-invites-every-day': {
        'task': 'auth_app.tasks.clean_expired_invites',
        'schedule': datetime.timedelta(days=1),
    },
    'clear-past-searching-info-every-day': {
        'task': 'search_app.tasks.clean_past_searching_info',
        'schedule': datetime.timedelta(days=1),
    },
}


SITE_DIR = get_envvar(
    "SITE_DIR",
    str,
    default=os.path.abspath(os.path.join(BASE_DIR, '..', '..', '..'))
)

sys.path.insert(0, os.path.join(BASE_DIR, 'apps', ))

DEBUG = get_envvar("DJANGO_DEBUG", bool, default=False)

DATABASES = {
    'default': dj_database_url.parse(
        get_envvar("DJANGO_DATABASE_URL", str, default="postgres://user:password@localhost:/database")
    )
}


STATIC_URL = '/static/'

STATIC_ROOT = get_envvar(
    "DJANGO_STATIC_ROOT",
    str,
    default=os.path.abspath(os.path.join(SITE_DIR, 'htdocs', 'static')))

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',

    'compressor.finders.CompressorFinder',
)

SECRET_KEY = get_envvar(
    "DJANGO_SECRET_KEY",
    str,
    default='0u!z2*16894q!pz=jyphmz+iv1364dht51ucn74($ymx*opjp&'
)

CELERY_BROKER_URL = get_envvar(
    "CELERY_BROKER_URL",
    str,
    default="amqp://guest:guest@localhost:5672//"
)


EMAIL_HOST = get_envvar('EMAIL_HOST', str, default='smtp.gmail.com')
EMAIL_HOST_USER = get_envvar('EMAIL_HOST_USER', str, required=True)
EMAIL_HOST_PASSWORD = SUPERUSER_PASSWORD = get_envvar('EMAIL_HOST_PASSWORD', str, required=True)
EMAIL_PORT = get_envvar('EMAIL_PORT', int, required=True)
EMAIL_USE_TLS = get_envvar('EMAIL_USE_TLS', bool, default=True)
MAX_ACTIVE_SEARCHES_PER_USER = get_envvar('MAX_ACTIVE_SEARCHES_PER_USER', int, default=3)
VIBER_AUTH_TOKEN = get_envvar('VIBER_AUTH_TOKEN', str, required=True)
SUPERUSER_VIBER_ID = get_envvar('SUPERUSER_VIBER_ID', str, required=True)
SUPERUSER_NAME = get_envvar('SUPERUSER_NAME', str, required=True)
SUPERUSER_EMAIL = get_envvar('SUPERUSER_EMAIL', str, required=True)
